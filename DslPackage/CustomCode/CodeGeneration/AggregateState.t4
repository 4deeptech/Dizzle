	/// <summary>
	/// <#=GetAggregateStateDescription(this.BoundedContext)#>
	/// </summary> 

	[DataContract]
    public partial class <#= this.BoundedContext.Element.AggregateState.Name #> : IAggregateState, I<#= this.BoundedContext.Element.AggregateState.Name #>
    {

<#
foreach (Property property in this.BoundedContext.Element.AggregateState.Properties.ToArray().AsQueryable().OrderBy(tmp=>tmp.Order))
{
#>
		/// <summary>
		/// <#= property.Description #>
		/// </summary>
		[DataMember(Order = <#= property.Order #>)]
        public <#= property.Type #> <#= property.Name #> { get; internal set; }

<#    
}
#>
        
		public <#= this.BoundedContext.Element.AggregateState.Name #>(IEnumerable<IEvent<IIdentity>> events)
        {
            foreach (var e in events)
            {
                Apply(e);
            }
        }

		public int Version { get; private set; }

		public void Apply(IEvent<IIdentity> e)
        {
            Version += 1;
            RedirectToWhen.InvokeEventOptional(this, e);
        }

    }//end aggregate state